/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
 * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
 * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2001             *
 * by the XIPHOPHORUS Company http://www.xiph.org/                  *

 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0_96_1024_3_VQH_
#define _V_res0_96_1024_3_VQH_
#include "codebook.h"

static long _vq_quantlist_res0_96_1024_3[] = {
	3,
	2,
	4,
	0,
	6,
};

static long _vq_lengthlist_res0_96_1024_3[] = {
	 2, 4, 4, 6, 6, 5, 7, 7,10,10, 4, 7, 7,10,10, 7,
	10,10,15,15, 7,10,10,15,15, 5, 7, 7, 9, 9, 7,10,
	10,13,12, 7,10,10,12,12,10,13,13,17,18,10,13,13,
	17,18, 4, 7, 7, 9, 9, 7,10,10,12,12, 7,10,10,12,
	12,10,13,13,16,18,10,13,13,18,17, 7,10, 9,12,13,
	10,13,13,17,17,10,13,13,17,17,15,18,21, 0, 0,15,
	17,17,21, 0, 7, 9, 9,13,13,10,13,13,16,18,10,13,
	13,17,17,16,19,18, 0, 0,15,18,17, 0, 0, 5, 7, 7,
	 9, 9, 7,10,10,13,13, 7,10,10,13,13,10,13,13,18,
	17,10,13,13,19,17, 7,10,10,13,13,10,12,13,15,16,
	10,12,12,15,15,13,15,16,19, 0,13,16,15,19,20, 7,
	10,10,13,12,10,13,12,16,15,10,12,12,15,16,13,16,
	15,20,18,13,15,15,19,18,10,13,13,17,17,13,15,16,
	 0,19,13,16,15, 0,20,18,18,20, 0, 0,18,19, 0, 0,
	 0,10,13,13,18,18,13,15,15,19,19,13,16,16,20,19,
	19,20,19, 0, 0,18,19,20,20, 0, 5, 7, 7, 9, 9, 7,
	10,10,13,13, 7,10,10,13,13,10,13,13,18,17,10,13,
	13,18,18, 7,10,10,13,13,10,12,12,16,16,10,12,12,
	15,16,13,15,15, 0, 0,13,15,15,19, 0, 7,10,10,12,
	13,10,12,12,15,15,10,12,12,16,15,13,16,15, 0, 0,
	13,15,15, 0, 0,10,13,13,18,18,13,15,15,20,20,13,
	16,15,19,19,18,19,19, 0, 0,17,18,20, 0, 0,10,13,
	13,17,17,13,15,15,19,20,13,15,15,20,18,17,19,20,
	 0, 0,17,20,18,20,19, 7,10,10,13,13,10,13,13,18,
	18,10,13,13,17,17,14,18,19,20, 0,13,17,18, 0, 0,
	10,13,13,17,18,13,15,16, 0, 0,13,16,15, 0,20,18,
	20, 0, 0, 0,18,20, 0, 0, 0,10,13,13,18,18,13,16,
	15, 0, 0,13,16,15, 0, 0,17,20, 0, 0, 0,17, 0,20,
	 0, 0,15,18,18, 0,20,17,20,19,20, 0,18, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15,18,18, 0, 0,
	18, 0,18, 0, 0,17,20, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 7,10,10,13,13,10,13,13,18,18,10,13,
	13,18,17,14,18,18,20, 0,13,19,18, 0, 0,10,13,13,
	18,17,13,16,15,20, 0,13,16,16, 0, 0,18, 0,19,20,
	 0,17,19,19, 0, 0,10,13,13,18,17,13,16,15,20, 0,
	13,15,15,19, 0,18, 0,20,20, 0,18, 0,20, 0, 0,15,
	18,19,20, 0,18,20,20, 0,20,18, 0,19, 0, 0, 0, 0,
	 0, 0, 0, 0,19, 0,20, 0,15,17,19, 0, 0,18,19,20,
	 0,20,18,19,19, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0,
	 0,
};

static float _vq_quantthresh_res0_96_1024_3[] = {
	-2, -0.5, 0.5, 2, 
};

static long _vq_quantmap_res0_96_1024_3[] = {
	    3,    1,    0,    2,    4,
};

static encode_aux_threshmatch _vq_auxt_res0_96_1024_3 = {
	_vq_quantthresh_res0_96_1024_3,
	_vq_quantmap_res0_96_1024_3,
	5,
	5
};

static long _vq_pigeonmap_res0_96_1024_3[] = {
	    1,     0,     0,     0,     0,     0, 
};

static long _vq_fitlist_res0_96_1024_3[] = {
	    1,     5,     6,     8,    16,    25,    26,    28, 
	   30,    31,    33,    40,    41,    43,    76,    80, 
	   81,    83,    91,   125,   126,   128,   130,   131, 
	  133,   140,   141,   143,   150,   151,   153,   155, 
	  156,   158,   165,   166,   168,   200,   201,   203, 
	  205,   206,   215,   216,   376,   380,   381,   383, 
	  391,   400,   401,   403,   405,   406,   415,   416, 
	  451,   455,   456,   458,     0,     7,    15,    27, 
	   32,    42,    75,    82,    90,   127,   132,   142, 
	  152,   157,   167,   202,   207,   217,   375,   382, 
	  390,   402,   407,   450,   457,     2,    17,    77, 
	   92,   377,   392,   452,     9,    29,    34,    44, 
	   84,   129,   134,   144,   154,   159,   204,   209, 
	  384,   404,     4,    19,    79,   379,   454,     3, 
	   11,    35,    36,    38,    78,    86,   135,   136, 
	  138,   160,   161,   163,   210,   211,   378,   386, 
	  410,   411,    10,    37,    85,   137,   162,   212, 
	  385,   412,   460,    12,    87,   387,    39,   139, 
	  164,   214,   414,    14,    89,   389,    13,    88, 
	  388,    21,    45,    46,    48,    96,   145,   146, 
	  148,   170,   171,   173,   220,   221,   396,   420, 
	  421,    20,    47,    95,   147,   172,   395,    22, 
	   97,   397,    49,   149,   174,    24,    23,    98, 
	   18,    51,    55,    56,    58,    66,   175,   176, 
	  178,   180,   181,   183,   190,   191,   193,   393, 
	  426,   430,   431,   441,    50,    57,    65,   177, 
	  182,   192,   425,   432,   440,    52,    67,   427, 
	   59,   179,   184,   194,    54,    69,   429,    53, 
	   61,   185,   186,   188,   428,   436,    60,   187, 
	  435,    62,   437,   189,    64,    63,    71,   195, 
	  196,   198,    70,   197,   445,    72,   447,   199, 
	   74,    73,    68,   101,   105,   106,   108,   116, 
	  225,   226,   228,   230,   231,   233,   240,   241, 
	  476,   480,   100,   107,   115,   227,   232,   242, 
	  475,   482,   102,   117,   477,   109,   229,   234, 
	  104,   103,   111,   235,   236,   238,   486,   110, 
	  237,   485,   112,   239,   114,   113,   121,   245, 
	  246,   248,   120,   247,   122,   314,   322,   362, 
	  364,   372,   374,   251,   255,   256,   258,   266, 
	  275,   276,   278,   280,   281,   283,   290,   291, 
	  326,   330,   331,   333,   341,   250,   257,   265, 
	  277,   282,   292,   325,   332,   340,   252,   267, 
	  327,   342,   259,   279,   284,   334,   254,   269, 
	  329,   253,   261,   285,   286,   288,   328,   336, 
	  260,   287,   335,   262,   337,   289,   264,   339, 
	  263,   338,   271,   295,   296,   298,   346,   270, 
	  297,   345,   272,   347,   274,   273,   268,   301, 
	  305,   306,   308,   316,   300,   307,   315,   302, 
	  317,   309,   304,   303,   311,   310,   312,   313, 
	  321,   320,   351,   355,   356,   358,   366,   350, 
	  357,   365,   352,   367,   359,   354,   353,   361, 
	  360,   363,   371,   370,   373,   501,   505,   506, 
	  508,   516,   525,   526,   528,   530,   531,   533, 
	  540,   543,   576,   580,   581,   500,   507,   515, 
	  527,   532,   542,   575,   582,   502,   517,   577, 
	  509,   529,   584,   504,   503,   511,   535,   536, 
	  578,   510,   537,   585,   512,   587,   514,   513, 
	  521,   545,   546,   596,   520,   547,   522,   598, 
	  572,   518,   551,   555,   556,   558,   550,   557, 
	  565,   552,   567,   554,   553,   561,   560,   562, 
	  563,   570,   568,   601,   605,   606,   600,   607, 
	  602,   609,   611,   610,   612,   622, 
};

static long _vq_fitmap_res0_96_1024_3[] = {
	    0,     0,     0,     0,     0,     0,     0,     0, 
	    0,     0,     0,     0,     0,     0,     0,     0, 
};

static long _vq_fitlength_res0_96_1024_3[] = {
	  494,   494,   494,   494,   494,   494,   494,   494, 
	  494,   494,   494,   494,   494,   494,   494,   494, 
};

static encode_aux_pigeonhole _vq_auxp_res0_96_1024_3 = {
	-3, 1, 6, 2,
	_vq_pigeonmap_res0_96_1024_3,
	494,
	_vq_fitlist_res0_96_1024_3,
	_vq_fitmap_res0_96_1024_3,
	_vq_fitlength_res0_96_1024_3
};

static static_codebook _vq_book_res0_96_1024_3 = {
	4, 625,
	_vq_lengthlist_res0_96_1024_3,
	1, -533200896, 1611661312, 3, 0,
	_vq_quantlist_res0_96_1024_3,
	NULL,
	&_vq_auxt_res0_96_1024_3,
	&_vq_auxp_res0_96_1024_3,
	0
};


#endif
