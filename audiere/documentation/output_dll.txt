Audiere Audio DLL Specification
Chad Austin
2002.01.14


In order for a DLL to qualify as an Audiere audio driver, it must contain
every function listed in this specification.  Each function uses the standard
calling convention (__stdcall).

Audio drivers are responsible for mixing audio streams before they are
sent to the output device.

Audio drivers must support the following stream sample rates:

8000 Hz
11025
12000
16000
22050
24000
32000
44100
48000

They can use resampling to internally convert them to another sample rate.


== Data types (byte alignment) ===============================================

#define ADR_CALL __stdcall

typedef int (ADR_CALL *AO_SAMPLE_SOURCE)(
  void* opaque,
  int sample_count,
  void* samples);

typedef void (ADR_CALL *AO_SAMPLE_RESET)(
  void* opaque);


typedef void* AO_STREAM;
typedef unsigned char AO_BOOL;
#define AO_TRUE  1
#define AO_FALSE 0

== Functions =================================================================

AO_BOOL AO_OpenDriver(HWND window)
void    AO_CloseDriver(void)

void AO_Update(void)

AO_STREAM AO_OpenStream(
    int channel_count,
    int sample_rate,
    int bits_per_sample,
    ADR_SAMPLE_SOURCE source,
    ADR_SAMPLE_RESET reset,
    void* opaque)

void AO_CloseStream(AO_STREAM stream)

void    AO_PlayStream(AO_STREAM stream)
void    AO_StopStream(AO_STREAM stream)
void    AO_ResetStream(AO_STREAM stream)
AO_BOOL AO_IsStreamPlaying(AO_STREAM stream)

void AO_SetVolume(AO_STREAM stream, int volume)
int  AO_GetVolume(AO_STREAM stream)


------------------------------------------------------------------------------

void AO_GetDriverInfo(DRIVERINFO* driverinfo)

  Retrieves general information about the driver.  Retrieves five informational
  strings.

  driverinfo - pointer to DRIVERINFO struct that contains driver information
    after function is called

------------------------------------------------------------------------------

void AO_ConfigureDriver(HWND parent)

  Opens a dialog box which allows user to configure driver.

  parent - handle of parent window

------------------------------------------------------------------------------

AO_BOOL AO_OpenDriver(const char* parameters)

  Initializes the audio driver.

  The driver should ignore parameters it doesn't understand

  parameters - comma-delimited key=value pairs
               i.e. "buffer=100,rate=44100"

------------------------------------------------------------------------------

void AO_CloseDriver(void)

  Shuts down the driver.

------------------------------------------------------------------------------

void AO_Update(void)

  Asks the driver to update its state and output more data if necessary.

  Audiere will call this function over and over again.  Therefore, AO_Update
  is responsible for throttling itself (via Sleep() or sleep/usleep).

------------------------------------------------------------------------------

AO_STREAM AO_OpenStream(
    int channel_count,
    int sample_rate,
    int bits_per_sample,
    AO_SAMPLE_SOURCE source,
    void* opaque)

  Opens an output stream with a given PCM source and format.

  Returns NULL on failure.

  channel_count - number of interleaved channels in audio data
  sample_rate - number of samples per channel per second
  bits_per_sample - number of bits per sample
  source - function that's called when more sample data is necessary
  opaque - passed directly into the 'source' function

------------------------------------------------------------------------------

void AO_CloseStream(AO_STREAM stream)

  Stops and closes the output stream.

------------------------------------------------------------------------------

void AO_PlayStream(AO_STREAM stream)

  Begins playback of a given stream.

------------------------------------------------------------------------------

void AO_StopStream(AO_STREAM stream)

  Stops playback of a stream.

------------------------------------------------------------------------------

void AO_ResetStream(AO_STREAM stream)

  Resets output stream, refilling the output buffer from the source.

------------------------------------------------------------------------------

AO_BOOL AO_IsStreamPlaying(AO_STREAM stream)

  Returns AO_TRUE if stream is currently playing.

  A stream should stop playback when it runs out of samples.

------------------------------------------------------------------------------

void AO_SetVolume(AO_STREAM stream, int volume)

  0% volume = 0
  100% volume = 65535

------------------------------------------------------------------------------

int AO_GetVolume(AO_STREAM stream)

  returns current volume of stream

------------------------------------------------------------------------------


== Synchronization Issues ====================================================

Audiere does synchronization for you.  You can assume that no two of these
calls will occur simultaneously.

