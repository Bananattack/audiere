#include "output_null.hpp"
#include "threads.hpp"


////////////////////////////////////////////////////////////////////////////////

bool
NullOutputContext::Initialize(const char* /*parameters*/)
{
  return true;
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputContext::Update()
{
  AI_Sleep(100);
}

////////////////////////////////////////////////////////////////////////////////

IOutputStream*
NullOutputContext::OpenStream(ISampleSource* source)
{
  return new NullOutputStream();
}

////////////////////////////////////////////////////////////////////////////////

NullOutputStream::NullOutputStream()
: m_volume(ADR_VOLUME_MAX)
{
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputStream::Play()
{
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputStream::Stop()
{
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputStream::Reset()
{
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputStream::ResetInputAndOutput()
{
}

////////////////////////////////////////////////////////////////////////////////

bool
NullOutputStream::IsPlaying()
{
  return false;
}

////////////////////////////////////////////////////////////////////////////////

void
NullOutputStream::SetVolume(int volume)
{
  m_volume = volume;
}

////////////////////////////////////////////////////////////////////////////////

int
NullOutputStream::GetVolume()
{
  return m_volume;
}

////////////////////////////////////////////////////////////////////////////////
