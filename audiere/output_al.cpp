#include "output_al.hpp"


////////////////////////////////////////////////////////////////////////////////

ALOutputDevice::ALOutputDevice()
{
  m_Device = NULL;
  m_Context = NULL;
}

////////////////////////////////////////////////////////////////////////////////

ALOutputDevice::~ALOutputDevice()
{
  if (m_Context) {
    alcMakeContextCurrent(NULL);
    alcDestroyContext(m_Context);
    m_Context = NULL;
  }

  if (m_Device) {
    alcCloseDevice(m_Device);
    m_Device = NULL;
  }
}

////////////////////////////////////////////////////////////////////////////////

bool
ALOutputDevice::Initialize(const char* parameters)
{
  // are we already initialized?
  if (m_Device) {
    return false;
  }

  // open an output device
  m_Device = alcOpenDevice(NULL);
  if (!m_Device) {
    return NULL;
  }

  // create a rendering context
  m_Context = alcCreateContext(m_Device, NULL);
  if (!m_Context) {
    alcCloseDevice(m_Device);
    m_Device = NULL;
    return NULL;
  }

  alcMakeContextCurrent(m_Context);

  // should we process it too?
  alcProcessContext(m_Context);

  return (m_Device != NULL);
}

////////////////////////////////////////////////////////////////////////////////

IOutputStream*
ALOutputDevice::OpenStream(
  int channel_count,
  int sample_rate,
  int bits_per_sample,
  ADR_SAMPLE_SOURCE source,
  ADR_SAMPLE_RESET reset,
  void* opaque)
{
  return NULL;
}

////////////////////////////////////////////////////////////////////////////////

void
ALOutputDevice::Play()
{
}

////////////////////////////////////////////////////////////////////////////////

void
ALOutputDevice::Stop()
{
}

////////////////////////////////////////////////////////////////////////////////

void
ALOutputDevice::Reset()
{
}

////////////////////////////////////////////////////////////////////////////////

bool
ALOutputDevice::IsPlaying()
{
}

////////////////////////////////////////////////////////////////////////////////

void
ALOutputDevice::SetVolume(int volume)
{
}

////////////////////////////////////////////////////////////////////////////////

int
ALOutputDevice::GetVolume()
{
}

////////////////////////////////////////////////////////////////////////////////

void
ALOutputDevice::SetPan(int pan)
{
}

////////////////////////////////////////////////////////////////////////////////

int
ALOutputDevice::GetPan()
{
}

////////////////////////////////////////////////////////////////////////////////
